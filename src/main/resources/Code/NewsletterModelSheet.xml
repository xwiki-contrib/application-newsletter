<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>Code</web>
  <name>NewsletterModelSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Code.ElementsClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1316995200000</creationDate>
  <date>1357313974000</date>
  <contentUpdateDate>1357313974000</contentUpdateDate>
  <version>1.1</version>
  <title>NewsletterModelClass Sheet</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>Code.NewsletterModelSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>9403e1ef-5674-40e5-988e-8235212f1198</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function(XWiki) {
  // Start XWiki augmentation.
  var editors = XWiki.editors = XWiki.editors || {};
  editors.ModelEditor = Class.create({
    initialize : function() {
      this.makeSortable($('xwikiclassproperties'));
      this.addElements();
    },
    makeSortable : function(element) {
      if (!element) {
        return;
      }
      // Create and insert move button
      element.select('.xproperty-title .tools').each(function(item) {
        var movebutton = new Element('span', {
          'class': 'tool move',
          'style': 'float: right',
          title: '$msg.get("newsletter.drag")'
        }).update('move');
        item.makePositioned();
        item.appendChild(movebutton);
        movebutton.observe('click', function(event) {
          event.stop();
        }.bindAsEventListener());
      });
      // Attach behavior to the move buttons
      Sortable.create('xclassContent', {
        tag : 'div',
        only : 'xproperty',
        handle : 'move',
        starteffect : this.startDrag.bind(this),
        endeffect : this.endDrag.bind(this),
        onUpdate : this.updateOrder.bind(this)
      });
    },
    updateOrder : function(container) {
      var children = container.childElements();
      for (var i = 0; i &lt; children.size(); ++i) {
        var child = children[i].down(".xproperty-number");
        child.down().value = i+1;
      }
    },
    startDrag : function(dragged) {
      dragged.addClassName('dragged');
    },
    endDrag : function(dragged) {
      dragged.removeClassName('dragged');
    },
    addElements :  function() {
      if($('addElementButton')) {
        var item = $('addElementButton');
        item._x_form_tokenElt = $$('input[name=form_token]')[0];
        var token = item._x_form_tokenElt ? item._x_form_tokenElt.value : "";
        item.observe('click', function(event) {
          item.blur();
          event.stop();
          var url = "$xwiki.getURL('Code.AddElement', 'get', 'xpage=plain&amp;ajax=1')";
          var addElementValue = $('elements-list').value;
          url  = url + "&amp;addElement=" + addElementValue + "&amp;modelName=" + XWiki.currentSpace +"." + XWiki.currentPage + "&amp;form_token=" + item._x_form_tokenElt.value;
          new Ajax.Request(
            /* Ajax request URL */
            
            url,
            /* Ajax request parameters */
            {
              // on success add a new element to the list
              onSuccess : function(response) {
                $('xclassContent').insert({bottom : response.responseText});
                item.notification.replace(new XWiki.widgets.Notification("$msg.get('core.editors.class.addProperty.done')", "done"));
                var insertedPropertyElt = $('xclassContent').lastChild;
                // Make the newly added property sortable
                this.makeSortable(insertedPropertyElt);
              }.bind(this),
              onCreate : function() {
                item.disabled = true;
                item.notification = new XWiki.widgets.Notification("$msg.get('core.editors.object.add.inProgress')", "inprogress");
              },
              onComplete : function() {
                item.disabled = false;
              },
              onFailure : function(response) {
                var failureReason = response.statusText;
                if (response.statusText == '' /* No response */ || response.status == 12031 /* In IE */) {
                  failureReason = 'Server not responding';
                }
                item.notification.replace(new XWiki.widgets.Notification("$msg.get('core.editors.class.addProperty.failed')" + failureReason, "error"));
              },
              // IE converts 204 status code into 1223...
              on1223 : function(response) {
                response.request.options.onSuccess(response);
              },
              // 0 is returned for network failures, except on IE where a strange large number (12031) is returned.
              on0 : function(response) {
                response.request.options.onFailure(response);
              }
            }
          ); // end ajax request
       }.bindAsEventListener(this)); // end observe 
      }
    }
  });
  function init() {
    return new editors.ModelEditor();
  }
  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

  // End XWiki augmentation.
  return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.SheetClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultEditMode>
        <disabled>0</disabled>
        <name>defaultEditMode</name>
        <number>1</number>
        <prettyName>Default Edit Mode</prettyName>
        <size>15</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultEditMode>
    </class>
    <name>Code.NewsletterModelSheet</name>
    <number>0</number>
    <className>XWiki.SheetClass</className>
    <guid>be9a8db9-1619-45e5-9d15-efe510fd01b1</guid>
    <property>
      <defaultEditMode/>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>Code.NewsletterModelSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>7ea6d585-bb28-4912-8062-1c62f561f09a</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.add_xobject .add_xobject-title a {
  display:inline;
}
.add_xobject .add_xobject-title {
  background: none;
  border-top: 0;
}
.add-element {
  width: auto;
}</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity}}
#if($context.action == 'inline' &amp;&amp; $doc.space == 'LettreInformationModeles')
  $!xwiki.ssfx.use('js/xwiki/editors/dataeditors.css', true)##
  $!xwiki.jsfx.use('js/scriptaculous/effects.js')##
  $!xwiki.jsfx.use('js/scriptaculous/dragdrop.js')##
  $!xwiki.ssx.use('Code.NewsletterModelSheet')##
  $!xwiki.jsx.use('Code.NewsletterModelSheet')##
#end
#**
 * The model is used as template for the newsletter instances and the newsletter is just it's parent.
 *#
## Display newsletter elements
#macro(displayAddObject)
  #if($context.action == 'inline')
    {{html clean=false}}
      &lt;div id="add-element"&gt;
        &lt;select id="elements-list" name="addElement"&gt;
         ## get the list of available elements
         #set($elementsList = $xwiki.searchDocuments("where  doc.space='LettreInformationElements' and doc.name&lt;&gt;'WebHome' and doc.name&lt;&gt;'WebPreferences'"))
         #foreach($elementOption in $elementsList)
           #set($elementDoc = $xwiki.getDocument($elementOption))
           #if($elementDoc &amp;&amp; "$!elementOption" != 'LettreInformationElements.Agenda' )
             &lt;option value="$escapetool.xml(${elementOption})"&gt;$elementDoc.getObject('Code.ElementsClass').getProperty('sectionName').value&lt;/option&gt;
           #end
         #end
       &lt;/select&gt;
       &lt;span class="buttonwrapper"&gt;&lt;input id="addElementButton" type="button" class="button"  value="$msg.get('newsletter.addElement')"/&gt;&lt;/span&gt;
       &lt;/div&gt;
    {{/html}}
  #end
#end
#macro(displayRemoveObject $obj)
  {{html clean=false}}
    #set($redirectURL = $xwiki.getURL($doc.fullName, 'inline'))
    &lt;a href="$doc.getURL('objectremove', "form_token=$!{services.csrf.getToken()}&amp;classname=Code.ElementsClass&amp;classid=${obj.number}&amp;xredirect=$escapetool.url($redirectURL)")" title="$msg.get('core.editors.object.removeObject.tooltip')"&gt;
      &lt;img src="$xwiki.getSkinFile('icons/silk/cross.gif')"/&gt;
    &lt;/a&gt;
  {{/html}}
#end
## Display unpublished newsletters for admins only.
#if($doc.getObject('Code.NewsletterInstanceClass') &amp;&amp; ($doc.space == 'LettreInformationModeles' || $doc.getObject('Code.NewsletterInstanceClass').getProperty('published').value == '1' || $hasAdmin || $xwiki.getUser().isUserInGroup('xwiki:XWiki.LettreInfoGroup')))
  #set($isPublished = $doc.getObject('Code.NewsletterInstanceClass').getProperty('published').value)
  #set($sorter = $xwiki.parseGroovyFromPage('Code.ElementsSorter'))
  #set($elements = $doc.getObjects('Code.ElementsClass'))
  $!sorter.sortElements($elements)##
  (%id="newsletter-toc"%)(((

  {{toc depth="1"/}}
  )))
  #if($context.action == 'inline')
  (%id="xwikiclassproperties" class="xclass-content"%)(((
    (%id="xclassContent"%)(((
  #end
    #foreach($elementObj in $elements)
      #set($sectionName = $doc.display('sectionName', 'view', $elementObj))
      #if($context.action == 'inline')
      (%class="xproperty" id="xproperty_${elementObj.number}"%)(((
        (%class="xproperty-title"%)(((
      #end
          ## do not display the order property when exporting the document
          (%class="xproperty-number" style="display:none"%)(((
          $doc.display('displayOrder', $elementObj)
          )))
          #if($context.action == 'inline')(%class="article-field" style="width: 95%"%)((( #end
          =$!sectionName=
          #if($context.action == 'inline') ))) #end
          #if($context.action == 'inline' &amp;&amp; $doc.space == 'LettreInformationModeles')
            (% class="tools propertyTools" style="position: relative; margin-top: -28px;"%)(((
              #if("$!sectionName" != 'Agenda' &amp;&amp; "$!sectionName" != 'Mentions légales')
                #displayRemoveObject($elementObj)
              #end
            )))
          #end
          ## the section content should be updated only for instances
          #if($doc.space != 'LettreInformationModeles')
             #if("$!sectionName" == 'Mentions légales')
               #if ("$context.action" == "inline")
                 #set($discard = $elementObj.set("sectionContent", $xwiki.getDocument($request.parent).getObject('Code.NewsletterClass').getProperty('disclaimer').value))
                 $doc.display('sectionContent', 'view', $elementObj)
                 (%class="xproperty-number" style="display:none"%)(((
                 $doc.display('sectionContent', $elementObj)
                 )))
               #else
                 $doc.display('sectionContent', $elementObj)
               #end
             #else
               $doc.display('sectionContent', $elementObj)
             #end
          #end
      #if($context.action == 'inline')
        )))
      )))
      #end
    #end
  #if($context.action == 'inline')
    )))
  )))
  #end
  #if($doc.space == 'LettreInformationModeles' &amp;&amp; $!xwiki.hasAccessLevel('edit'))
    #displayAddObject(${doc.fullName})
  #end
  #if($doc.space == 'LettreInformationInstances' &amp;&amp; $!context.action != 'view')
    $!doc.use('Code.NewsletterInstanceClass')
    ; $msg.get('newsletter.instanceDescription')
    : $doc.display('description')
    ; $msg.get('newsletter.published')
    : $doc.display('published')
  #end
#else
  {{info}}$msg.get('newsletter.notavailable'){{/info}}
#end
{{/velocity}}</content>
</xwikidoc>
